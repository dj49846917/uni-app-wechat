<template>
	<view>
		<!-- 状态栏 -->
		<view class="tipBar" :style="getStatusBarHeight"></view>
		<!-- 导航栏 -->
		<my-nav :showMessageCount="false" title="通讯录"></my-nav>
		<!-- 功能区部分 -->
		<scroll-view scroll-y="true" :scroll-top="scrollToPosition2()" :style="getScrollHeight" :scroll-into-view="scrollToPosition()"
		 scroll-with-animation="true">
			<my-chat-list v-for="(item, index) in funcList" :key="item.id" :index="index" :item="item" />
			<!-- 字母查询区域 -->

			<view v-for="item in chatList" :key="item.title" :id="item.title">
				<view class="chat_list" v-if="showChatList(item)">
					<view class="chat_list_title">
						<text class="chat_list_title_text">{{ item.title }}</text>
					</view>
					<my-chat-list v-for="(it, index) in item.list" :key="it.id" :index="index" :item="it" />
				</view>
			</view>
		</scroll-view>
		<view 
			class="alphabet"
			ref="alphabet" 
		>
			<view :class="piece.title === alSelect ? 'alphabet_item_active' : 'alphabet_item'" v-for="(piece, index) in chatList" :key="piece.id" @click="()=>handleAlphabet(piece)">
				<text :class="piece.title === alSelect ? 'alphabet_item_text_active' : 'alphabet_item_text'">{{ piece.title }}</text>
			</view>
		</view>
	</view>
</template>

<script>
	import {
		mapState
	} from 'vuex'
	import myNav from '@/component/myNav/myNav.nvue';
	import myChatList from '@/component/myChatList/myChatList.nvue';
	import {
		chatFuncMenu,
		chatListData,
		chatCategory
	} from '@/static/data/chat.js';

	// 兼容app端
	// #ifdef APP-PLUS-NVUE
	const dom = weex.requireModule('dom')
	// #endif

	export default {
		components: {
			myNav,
			myChatList
		},
		data() {
			return {
				funcList: [], // 功能区列表
				chatList: [], // 通讯录列表
				alphabetList: [], // 字母列表
				alSelect: "", // 点击选中的字母
				alHeight: -1, // 字母列表的高度
				touchStartY: -1,	// 开始手势时的位置
				touchEndY: -1,		// 结束手势时的位置
			};
		},
		computed: {
			...mapState({
				// 获取状态栏的高度
				getStatusBarHeight: (state) => {
					return `height: ${state.app.tipBarHeight}px`
				},
				// 获取可滚动区域的高度
				getScrollHeight: (state) => {
					const navBarHeight = uni.upx2px(90)
					const tabBarHeight = uni.upx2px(110)
					// #ifndef MP
					const scrollHeight = state.app.height - state.app.tipBarHeight - navBarHeight - tabBarHeight;
					return `height: ${scrollHeight}px`;
					// #endif

					// #ifdef MP
					const scrollHeight2 = state.app.height - state.app.tipBarHeight - navBarHeight;
					return `height: ${scrollHeight2}px`;
					// #endif
				},
			}),
		},
		created() {
			this.funcList = chatFuncMenu
			this.chatList = chatListData
			this.alphabetList = chatCategory
		},
		onReady() {
			// 获取到字母列表的高度(weex的写法)
			// #ifdef APP-PLUS-NVUE
			dom.getComponentRect(this.$refs.alphabet, option => {
				this.alHeight = option.size.height
			})
			// #endif	
		},
		mounted() {
			// 获取到字母列表的高度
			// #ifndef APP-PLUS-NVUE
			let view = uni.createSelectorQuery().in(this).select(".alphabet");
			view.boundingClientRect(data => {
				this.alHeight = data.height
			}).exec();
			// #endif
		},
		methods: {
			// 点击右侧的字母
			handleAlphabet(item) {
				this.alSelect = item.title
			},
			// 判断聊天列表是否存在
			showChatList(item) {
				if (item.list) {
					if (item.list.length > 0) {
						return true
					}
					return false
				}
				return false
			},
			// 点击字母菜单，scroll-view跳转到对应的位置
			scrollToPosition() {
				if (this.alSelect === '↑' || this.alSelect === '#') {
					return ''
				}
				return this.alSelect
			},
			//接上一个方法，如果是"#"跳到最后,如果是"↑"回到顶部
			scrollToPosition2() {
				// #ifndef H5
				if (this.alSelect === '↑') {
					return 0
				}
				if (this.alSelect === '#') {
					return 9999
				}
				// #endif

				// #ifdef H5
				if (this.alSelect === '↑') {
					return 0
				} else if (this.alSelect === '#') {
					return 9999
				} else {
					return 1
				}
				// #endif
			}
		}
	}
</script>

<style lang="scss">
	@import "@/constant/css/constant.scss";

	.tipBar {
		@include tabBarStyle;
	}

	.chat_list_title {
		width: $boxWidth;
		height: 60rpx;
		padding-left: 30rpx;
		background-color: $boxBgColor;
		@include borderBottom;
		@include verticalCenter;
	}

	.chat_list_title_text {
		font-size: 26rpx;
		color: $listTextColor;
	}

	.alphabet {
		position: fixed;
		right: 0;
		width: 45rpx;
		z-index: 9999;
		justify-content: center;
		/* #ifndef APP-PLUS-NVUE */
		top: 15%;
		/* #endif */
		/* #ifdef APP-PLUS-NVUE */
		top: 200rpx;
		/* #endif */
	}

	.alphabet_item {
		width: 32rpx;
		@include center;
		height: 32rpx;
	}
	
	.alphabet_item_active {
		@extend .alphabet_item;
		background-color: $selectedColor;
		border-radius: 100rpx;
	}

	.alphabet_item_text {
		font-size: 20rpx;
		color: $listTitleColor;
	}
	.alphabet_item_text_active {
		font-size: 20rpx;
		color: #fff;
	}
</style>
