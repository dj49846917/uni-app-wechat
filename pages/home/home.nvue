<template>
	<view>
		<!-- 状态栏 -->
		<view class="tipBar" :style="getStatusBarHeight"></view>
		<!-- 导航栏 -->
		<my-nav :showMessageCount="true"></my-nav>
		<!-- 列表 -->
		<home-list :list="list" @long="longPressShowMenu"></home-list>
		<!-- 弹出层 -->
		<my-model ref="popUp2" :bodyWidth="240" :bodyHeight="300" isMaskOpacity>
			<view class="pressMenu" elevation="2px">
				<view 
					class="pressMenu_item" 
					v-for="(item, index) in listMenuData" 
					:key="item.id" 
					hover-class="pressMenu_item_light"
					@click="longPressClick(item, index)"
				>
					<text class="pressMenu_item_text">{{ item.val }}</text>
				</view>
			</view>
		</my-model>
	</view>
</template>

<script>
	import { mapState } from 'vuex'
	import myNav from '@/component/myNav/myNav.nvue';
	import myModel from '@/component/myModel/myModel.nvue';
	import homeList from '@/pages/home/homeList.nvue';
	import { listData, homeListMenu } from '@/static/data/home.js';
	export default {
		components: {
			myNav,
			homeList,
			myModel
		},
		data() {
			return {
				list: [],  // 列表数据
				listMenuData: [],  // 长按列表的菜单
				listIndex: -1,		// 长按时，获取列表的下标
			}
		},
		created() {
			this.list = listData
			this.listMenuData = homeListMenu
		},
		computed: {
			...mapState({
				// 获取状态栏的高度
				getStatusBarHeight: (state) => {
					return `height: ${state.app.tipBarHeight}px`
				},
			}),
		},
		methods: {
			// 长按列表展示弹窗
			longPressShowMenu(obj) {
				this.$refs.popUp2.show(obj.x, obj.y)
				this.listIndex = obj.index
			},
			// 点击长按列表弹窗中的一项
			longPressClick(item, index) {
				switch (item.val){
					case "标为已读":
						this.list[this.listIndex].noreadnum = 0
						this.listMenuData[index].val = "标为未读"
						this.$refs.popUp2.hide()
						break;
					case "标为未读":
						this.list[this.listIndex].noreadnum = 1
						this.listMenuData[index].val = "标为已读"
						this.$refs.popUp2.hide()
						break;
					case "顶置聊天":
						this.list[this.listIndex].isTop = 1
						this.listMenuData[index].val = "取消顶置"
						this.$refs.popUp2.hide()
						uni.showToast({
							title: "已顶置",
							duration: 1000
						})
						break;
					case "取消顶置":
						this.list[this.listIndex].isTop = 2
						this.listMenuData[index].val = "顶置聊天"
						this.$refs.popUp2.hide()
						uni.showToast({
							title: "已取消顶置",
							duration: 1000
						})
						break;
					default:
					this.list.splice(this.listIndex, 1)
					this.$refs.popUp2.hide()
						break;
				}
			}
		}
	}
</script>

<style lang="scss">
	@import "@/constant/css/constant.scss";
	.tipBar {
		width: $boxWidth;
		background-color: $boxBgColor;
	}
	.pressMenu {
		width: 240rpx;
		height: 300rpx;
		box-shadow: 5px 5px 5px rgb(233, 233, 233);
	}
	.pressMenu_item {
		flex: 1;
		height: 100rpx;
		padding-left: 20rpx;
		@include verticalCenter;
	}
	.pressMenu_item_light {
		@extend .pressMenu_item;
		background-color: $clickLightColor;
	}
	.pressMenu_item_text {
		color: $listTitleColor;
		font-size: $listTextSize;
	}
</style>
